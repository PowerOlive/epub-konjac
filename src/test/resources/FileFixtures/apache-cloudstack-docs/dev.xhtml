<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Programmer Guide</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="programmer-guide">
<h1>Programmer Guide</h1>
<p>This guide shows how to develop CloudStack, use the API for operation
and integration, access the usage data and use CloudStack specific tools
to ease development, testing and integration.</p>
<div class="section" id="the-cloudstack-api">
<h2>The CloudStack API</h2>
<div class="section" id="getting-started">
<h3>Getting Started</h3>
<p>To get started using the CloudStack API, you should have the following:</p>
<ul class="simple">
<li><p>URL of the CloudStack server you wish to integrate with.</p></li>
<li><p>Both the API Key and Secret Key for an account. This should have been
generated by the administrator of the cloud instance and given to
you.</p></li>
<li><p>Familiarity with HTTP GET/POST and query strings.</p></li>
<li><p>Knowledge of either XML or JSON.</p></li>
<li><p>Knowledge of a programming language that can generate HTTP requests;
for example, Java or PHP.</p></li>
</ul>
</div>
<div class="section" id="roles">
<h3>Roles</h3>
<p>The CloudStack API supports three access roles:</p>
<ol class="arabic simple">
<li><p>Root Admin. Access to all features of the cloud, including both
virtual and physical resource management.</p></li>
<li><p>Domain Admin. Access to only the virtual resources of the clouds that
belong to the administrator’s domain.</p></li>
<li><p>User. Access to only the features that allow management of the user’s
virtual instances, storage, and network.</p></li>
</ol>
</div>
<div class="section" id="api-reference-documentation">
<h3>API Reference Documentation</h3>
<p>You can find all the API reference documentation at the below site:</p>
<p><a class="reference external" href="http://cloudstack.apache.org/docs/api/">http://cloudstack.apache.org/docs/api/</a></p>
</div>
<div class="section" id="making-api-requests">
<h3>Making API Requests</h3>
<p>All CloudStack API requests are submitted in the form of a HTTP GET/POST
with an associated command and any parameters. A request is composed of
the following whether in HTTP or HTTPS:</p>
<ul class="simple">
<li><p>CloudStack API URL: This is the web services API entry point(for
example, <a class="reference external" href="http://www.example.com:8080/client/api">http://www.example.com:8080/client/api</a>)</p></li>
<li><p>Command: The web services command you wish to execute, such as start
a virtual machine or create a disk volume</p></li>
<li><p>Parameters: Any additional required or optional parameters for the
command</p></li>
</ul>
<p>A sample API GET request looks like the following:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>http://localhost:8080/client/api?command<span class="o">=</span>deployVirtualMachine<span class="p">&amp;</span><span class="nv">serviceOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">diskOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">templateId</span><span class="o">=</span><span class="m">2</span><span class="p">&amp;</span><span class="nv">zoneId</span><span class="o">=</span><span class="m">4</span><span class="p">&amp;</span><span class="nv">apiKey</span><span class="o">=</span>miVr6X7u6bN_sdahOBpjNejPgEsT35eXq-jB8CG20YI3yaxXcgpyuaIRmFI_EJTVwZ0nUkkJbPmY3y2bciKwFQ<span class="p">&amp;</span><span class="nv">signature</span><span class="o">=</span>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D
</pre></div>
</div>
<p>Or in a more readable format:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="m">1</span>. http://localhost:8080/client/api
<span class="m">2</span>. ?command<span class="o">=</span>deployVirtualMachine
<span class="m">3</span>. <span class="p">&amp;</span><span class="nv">serviceOfferingId</span><span class="o">=</span><span class="m">1</span>
<span class="m">4</span>. <span class="p">&amp;</span><span class="nv">diskOfferingId</span><span class="o">=</span><span class="m">1</span>
<span class="m">5</span>. <span class="p">&amp;</span><span class="nv">templateId</span><span class="o">=</span><span class="m">2</span>
<span class="m">6</span>. <span class="p">&amp;</span><span class="nv">zoneId</span><span class="o">=</span><span class="m">4</span>
<span class="m">7</span>. <span class="p">&amp;</span><span class="nv">apiKey</span><span class="o">=</span>miVr6X7u6bN_sdahOBpjNejPgEsT35eXqjB8CG20YI3yaxXcgpyuaIRmFI_EJTVwZ0nUkkJbPmY3y2bciKwFQ
<span class="m">8</span>. <span class="p">&amp;</span><span class="nv">signature</span><span class="o">=</span>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D
</pre></div>
</div>
<p>The first line is the CloudStack API URL. This is the Cloud instance you
wish to interact with.</p>
<p>The second line refers to the command you wish to execute. In our
example, we are attempting to deploy a fresh new virtual machine. It is
preceded by a (?) to separate itself from the CloudStack API URL.</p>
<p>Lines 3-6 are the parameters for this given command. To see the command
and its request parameters, please refer to the appropriate section in
the CloudStack API documentation. Each parameter field-value pair
(field=value) is preceded by an ampersand character (&amp;).</p>
<p>Line 7 is the user API Key that uniquely identifies the account. See
Signing API Requests on page 7.</p>
<p>Line 8 is the signature hash created to authenticate the user account
executing the API command.</p>
</div>
<div class="section" id="signing-api-requests">
<h3>Signing API Requests</h3>
<p>Whether you access the CloudStack API with HTTP or HTTPS, it must still
be signed so that CloudStack can verify the caller has been
authenticated and authorized to execute the command. Make sure that you
have both the API Key and Secret Key provided by the CloudStack
administrator for your account before proceeding with the signing
process.</p>
<p>To show how to sign a request, we will re-use the previous example.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>http://http://localhost:8080/client/api?command<span class="o">=</span>deployVirtualMachine<span class="p">&amp;</span><span class="nv">serviceOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">diskOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">templateId</span><span class="o">=</span><span class="m">2</span><span class="p">&amp;</span><span class="nv">zoneId</span><span class="o">=</span><span class="m">4</span><span class="p">&amp;</span><span class="nv">apiKey</span><span class="o">=</span>miVr6X7u6bN_sdahOBpjNejPgEsT35eXq-jB8CG20YI3yaxXcgpyuaIRmFI_EJTVwZ0nUkkJbPmY3y2bciKwFQ<span class="p">&amp;</span><span class="nv">signature</span><span class="o">=</span>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D
</pre></div>
</div>
<p>Breaking this down, we have several distinct parts to this URL.</p>
<ul>
<li><p>Base URL: This is the base URL to the CloudStack Management Server.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>http://localhost:8080
</pre></div>
</div>
</li>
<li><p>API Path: This is the path to the API Servlet that processes the
incoming requests.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>/client/api?
</pre></div>
</div>
</li>
<li><p>Command String: This part of the query string comprises of the
command, its parameters, and the API Key that identifies the account.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>As with all query string parameters of field-value pairs, the “field”
component is case insensitive while all “value” values are case
sensitive.</p>
</div>
</li>
<li><p>Signature: This is the signature of the command string that is
generated using a combination of the user’s Secret Key and the HMAC
SHA-1 hashing algorithm.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="p">&amp;</span><span class="nv">signature</span><span class="o">=</span>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D
</pre></div>
</div>
</li>
</ul>
<p>Every API request has the format Base URL+API Path+Command
String+Signature.</p>
<p>To generate the signature.</p>
<ol class="arabic">
<li><p>For each field-value pair (as separated by a ‘&amp;’) in the Command
String, URL encode each value so that it can be safely sent via HTTP
GET.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Make sure all spaces are encoded as “%20” rather than “+”.</p>
</div>
</li>
<li><p>Lower case the entire Command String and sort it alphabetically via
the field for each field-value pair. The result of this step would
look like the following.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">apikey</span><span class="o">=</span>mivr6x7u6bn_sdahobpjnejpgest35exq-jb8cg20yi3yaxxcgpyuairmfi_ejtvwz0nukkjbpmy3y2bcikwfq<span class="p">&amp;</span><span class="nv">command</span><span class="o">=</span>deployvirtualmachine<span class="p">&amp;</span><span class="nv">diskofferingid</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">serviceofferingid</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">templateid</span><span class="o">=</span><span class="m">2</span><span class="p">&amp;</span><span class="nv">zoneid</span><span class="o">=</span><span class="m">4</span>
</pre></div>
</div>
</li>
<li><p>Take the sorted Command String and run it through the HMAC SHA-1
hashing algorithm (most programming languages offer a utility method
to do this) with the user’s Secret Key. Base64 encode the resulting
byte array in UTF-8 so that it can be safely transmitted via HTTP.
The final string produced after Base64 encoding should be
“Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D”.</p>
<p>By reconstructing the final URL in the format Base URL+API
Path+Command String+Signature, the final URL should look like:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>http://localhost:8080/client/api?command<span class="o">=</span>deployVirtualMachine<span class="p">&amp;</span><span class="nv">serviceOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">diskOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">templateId</span><span class="o">=</span><span class="m">2</span><span class="p">&amp;</span><span class="nv">zoneId</span><span class="o">=</span><span class="m">4</span><span class="p">&amp;</span><span class="nv">apiKey</span><span class="o">=</span>miVr6X7u6bN_sdahOBpjNejPgEsT35eXq-jB8CG20YI3yaxXcgpyuaIRmFI_EJTVwZ0nUkkJbPmY3y2bciKwFQ<span class="p">&amp;</span><span class="nv">signature</span><span class="o">=</span>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D
</pre></div>
</div>
</li>
</ol>
</div>
<div class="section" id="how-to-sign-an-api-call-with-python">
<h3>How to sign an API call with Python</h3>
<p>To illustrate the procedure used to sign API calls we present a step by
step interactive session using Python.</p>
<p>First import the required modules:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">$python</span>
Python <span class="m">2</span>.7.3 <span class="o">(</span>default, Nov <span class="m">17</span> <span class="m">2012</span>, <span class="m">19</span>:54:34<span class="o">)</span>
<span class="o">[</span>GCC <span class="m">4</span>.2.1 Compatible Apple Clang <span class="m">4</span>.1 <span class="o">((</span>tags/Apple/clang-421.11.66<span class="o">))]</span> on darwin
Type <span class="s2">&quot;help&quot;</span>, <span class="s2">&quot;copyright&quot;</span>, <span class="s2">&quot;credits&quot;</span> or <span class="s2">&quot;license&quot;</span> <span class="k">for</span> more information.
&gt;&gt;&gt; import urllib2
&gt;&gt;&gt; import urllib
&gt;&gt;&gt; import hashlib
&gt;&gt;&gt; import hmac
&gt;&gt;&gt; import base64
</pre></div>
</div>
<p>Define the endpoint of the Cloud, the command that you want to execute
and the keys of the user.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&gt;&gt;&gt; <span class="nv">baseurl</span><span class="o">=</span><span class="s1">&#39;http://localhost:8080/client/api?&#39;</span>
&gt;&gt;&gt; <span class="nv">request</span><span class="o">={}</span>
&gt;&gt;&gt; request<span class="o">[</span><span class="s1">&#39;command&#39;</span><span class="o">]=</span><span class="s1">&#39;listUsers&#39;</span>
&gt;&gt;&gt; request<span class="o">[</span><span class="s1">&#39;response&#39;</span><span class="o">]=</span><span class="s1">&#39;json&#39;</span>
&gt;&gt;&gt; request<span class="o">[</span><span class="s1">&#39;apikey&#39;</span><span class="o">]=</span><span class="s1">&#39;plgWJfZK4gyS3mOMTVmjUVg-X-jlWlnfaUJ9GAbBbf9EdM-kAYMmAiLqzzq1ElZLYq_u38zCm0bewzGUdP66mg&#39;</span>
&gt;&gt;&gt; <span class="nv">secretkey</span><span class="o">=</span><span class="s1">&#39;VDaACYb0LV9eNjTetIOElcVQkvJck_J_QljX_FcHRj87ZKiy0z0ty0ZsYBkoXkY9b7eq1EhwJaw7FF3akA3KBQ&#39;</span>
</pre></div>
</div>
<p>Build the request string:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&gt;&gt;&gt; <span class="nv">request_str</span><span class="o">=</span><span class="s1">&#39;&amp;&#39;</span>.join<span class="o">([</span><span class="s1">&#39;=&#39;</span>.join<span class="o">([</span>k,urllib.quote_plus<span class="o">(</span>request<span class="o">[</span>k<span class="o">])])</span> <span class="k">for</span> k in request.keys<span class="o">()])</span>
&gt;&gt;&gt; request_str
<span class="s1">&#39;apikey=plgWJfZK4gyS3mOMTVmjUVg-X-jlWlnfaUJ9GAbBbf9EdM-kAYMmAiLqzzq1ElZLYq_u38zCm0bewzGUdP66mg&amp;command=listUsers&amp;response=json&#39;</span>
</pre></div>
</div>
<p>Compute the signature with hmac, do a 64 bit encoding and a url
encoding:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&gt;&gt;&gt; <span class="nv">sig_str</span><span class="o">=</span><span class="s1">&#39;&amp;&#39;</span>.join<span class="o">([</span><span class="s1">&#39;=&#39;</span>.join<span class="o">([</span>k.lower<span class="o">()</span>,urllib.quote_plus<span class="o">(</span>request<span class="o">[</span>k<span class="o">]</span>.lower<span class="o">()</span>.replace<span class="o">(</span><span class="s1">&#39;+&#39;</span>,<span class="s1">&#39;%20&#39;</span><span class="o">))])</span><span class="k">for</span> k in sorted<span class="o">(</span>request.iterkeys<span class="o">())])</span>
&gt;&gt;&gt; sig_str <span class="s1">&#39;apikey=plgwjfzk4gys3momtvmjuvg-x-jlwlnfauj9gabbbf9edm-kaymmailqzzq1elzlyq_u38zcm0bewzgudp66mg&amp;command=listusers&amp;response=json&#39;</span>
&gt;&gt;&gt; <span class="nv">sig</span><span class="o">=</span>hmac.new<span class="o">(</span>secretkey,sig_str,hashlib.sha1<span class="o">)</span>
&gt;&gt;&gt; sig
&lt;hmac.HMAC instance at 0x10d91d680&gt;
&gt;&gt;&gt; <span class="nv">sig</span><span class="o">=</span>hmac.new<span class="o">(</span>secretkey,sig_str,hashlib.sha1<span class="o">)</span>.digest<span class="o">()</span>
&gt;&gt;&gt; sig
<span class="s1">&#39;M:]\x0e\xaf\xfb\x8f\xf2y\xf1p\x91\x1e\x89\x8a\xa1\x05\xc4A\xdb&#39;</span>
&gt;&gt;&gt; <span class="nv">sig</span><span class="o">=</span>base64.encodestring<span class="o">(</span>hmac.new<span class="o">(</span>secretkey,sig_str,hashlib.sha1<span class="o">)</span>.digest<span class="o">())</span>
&gt;&gt;&gt; sig
<span class="s1">&#39;TTpdDq/7j/J58XCRHomKoQXEQds=\n&#39;</span>
&gt;&gt;&gt; <span class="nv">sig</span><span class="o">=</span>base64.encodestring<span class="o">(</span>hmac.new<span class="o">(</span>secretkey,sig_str,hashlib.sha1<span class="o">)</span>.digest<span class="o">())</span>.strip<span class="o">()</span>
&gt;&gt;&gt; sig
<span class="s1">&#39;TTpdDq/7j/J58XCRHomKoQXEQds=&#39;</span>
&gt;&gt;&gt; <span class="nv">sig</span><span class="o">=</span>urllib.quote_plus<span class="o">(</span>base64.encodestring<span class="o">(</span>hmac.new<span class="o">(</span>secretkey,sig_str,hashlib.sha1<span class="o">)</span>.digest<span class="o">())</span>.strip<span class="o">())</span>
</pre></div>
</div>
<p>Finally, build the entire string and do an http GET:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&gt;&gt;&gt; <span class="nv">req</span><span class="o">=</span>baseurl+request_str+<span class="s1">&#39;&amp;signature=&#39;</span>+sig
&gt;&gt;&gt; req
<span class="s1">&#39;http://localhost:8080/client/api?apikey=plgWJfZK4gyS3mOMTVmjUVg-X-jlWlnfaUJ9GAbBbf9EdM-kAYMmAiLqzzq1ElZLYq_u38zCm0bewzGUdP66mg&amp;command=listUsers&amp;response=json&amp;signature=TTpdDq%2F7j%2FJ58XCRHomKoQXEQds%3D&#39;</span>
&gt;&gt;&gt; <span class="nv">res</span><span class="o">=</span>urllib2.urlopen<span class="o">(</span>req<span class="o">)</span>
&gt;&gt;&gt; res.read<span class="o">()</span>
<span class="s1">&#39;{ &quot;listusersresponse&quot; : { &quot;count&quot;:3 ,&quot;user&quot; : [  {&quot;id&quot;:&quot;7ed6d5da-93b2-4545-a502-23d20b48ef2a&quot;,&quot;username&quot;:&quot;admin&quot;,&quot;firstname&quot;:&quot;admin&quot;,&quot;lastname&quot;:&quot;cloud&quot;,&quot;created&quot;:&quot;2012-07-05T12:18:27-0700&quot;,&quot;state&quot;:&quot;enabled&quot;,&quot;account&quot;:&quot;admin&quot;,&quot;accounttype&quot;:1,&quot;domainid&quot;:&quot;8a111e58-e155-4482-93ce-84efff3c7c77&quot;,&quot;domain&quot;:&quot;ROOT&quot;,&quot;apikey&quot;:&quot;plgWJfZK4gyS3mOMTVmjUVg-X-jlWlnfaUJ9GAbBbf9EdM-kAYMmAiLqzzq1ElZLYq_u38zCm0bewzGUdP66mg&quot;,&quot;secretkey&quot;:&quot;VDaACYb0LV9eNjTetIOElcVQkvJck_J_QljX_FcHRj87ZKiy0z0ty0ZsYBkoXkY9b7eq1EhwJaw7FF3akA3KBQ&quot;,&quot;accountid&quot;:&quot;7548ac03-af1d-4c1c-9064-2f3e2c0eda0d&quot;}, {&quot;id&quot;:&quot;1fea6418-5576-4989-a21e-4790787bbee3&quot;,&quot;username&quot;:&quot;runseb&quot;,&quot;firstname&quot;:&quot;foobar&quot;,&quot;lastname&quot;:&quot;goa&quot;,&quot;email&quot;:&quot;joe@smith.com&quot;,&quot;created&quot;:&quot;2013-04-10T16:52:06-0700&quot;,&quot;state&quot;:&quot;enabled&quot;,&quot;account&quot;:&quot;admin&quot;,&quot;accounttype&quot;:1,&quot;domainid&quot;:&quot;8a111e58-e155-4482-93ce-84efff3c7c77&quot;,&quot;domain&quot;:&quot;ROOT&quot;,&quot;apikey&quot;:&quot;Xhsb3MewjJQaXXMszRcLvQI9_NPy_UcbDj1QXikkVbDC9MDSPwWdtZ1bUY1H7JBEYTtDDLY3yuchCeW778GkBA&quot;,&quot;secretkey&quot;:&quot;gIsgmi8C5YwxMHjX5o51pSe0kqs6JnKriw0jJBLceY5bgnfzKjL4aM6ctJX-i1ddQIHJLbLJDK9MRzsKk6xZ_w&quot;,&quot;accountid&quot;:&quot;7548ac03-af1d-4c1c-9064-2f3e2c0eda0d&quot;}, {&quot;id&quot;:&quot;52f65396-183c-4473-883f-a37e7bb93967&quot;,&quot;username&quot;:&quot;toto&quot;,&quot;firstname&quot;:&quot;john&quot;,&quot;lastname&quot;:&quot;smith&quot;,&quot;email&quot;:&quot;john@smith.com&quot;,&quot;created&quot;:&quot;2013-04-23T04:27:22-0700&quot;,&quot;state&quot;:&quot;enabled&quot;,&quot;account&quot;:&quot;admin&quot;,&quot;accounttype&quot;:1,&quot;domainid&quot;:&quot;8a111e58-e155-4482-93ce-84efff3c7c77&quot;,&quot;domain&quot;:&quot;ROOT&quot;,&quot;apikey&quot;:&quot;THaA6fFWS_OmvU8od201omxFC8yKNL_Hc5ZCS77LFCJsRzSx48JyZucbUul6XYbEg-ZyXMl_wuEpECzK-wKnow&quot;,&quot;secretkey&quot;:&quot;O5ywpqJorAsEBKR_5jEvrtGHfWL1Y_j1E4Z_iCr8OKCYcsPIOdVcfzjJQ8YqK0a5EzSpoRrjOFiLsG0hQrYnDA&quot;,&quot;accountid&quot;:&quot;7548ac03-af1d-4c1c-9064-2f3e2c0eda0d&quot;} ] } }&#39;</span>
</pre></div>
</div>
</div>
<div class="section" id="enabling-api-call-expiration">
<h3>Enabling API Call Expiration</h3>
<p>You can set an expiry timestamp on API calls to prevent replay attacks
over non-secure channels, such as HTTP. The server tracks the expiry
timestamp you have specified and rejects all the subsequent API requests
that come in after this validity period.</p>
<p>To enable this feature, add the following parameters to the API request:</p>
<ul class="simple">
<li><p>signatureVersion=3: If the signatureVersion parameter is missing or
is not equal to 3, the expires parameter is ignored in the API
request.</p></li>
<li><p>expires=YYYY-MM-DDThh:mm:ssZ: Specifies the date and time at which
the signature included in the request is expired. The timestamp is
expressed in the YYYY-MM-DDThh:mm:ssZ format, as specified in the ISO
8601 standard.</p></li>
</ul>
<p>For example:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">expires</span><span class="o">=</span><span class="m">2011</span>-10-10T12:00:00+0530
</pre></div>
</div>
<p>A sample API request with expiration is given below:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>http://&lt;IPAddress&gt;:8080/client/api?command<span class="o">=</span>listZones<span class="p">&amp;</span><span class="nv">signatureVersion</span><span class="o">=</span><span class="m">3</span><span class="p">&amp;</span><span class="nv">expires</span><span class="o">=</span><span class="m">2011</span>-10-10T12:00:00+0530<span class="p">&amp;</span><span class="nv">apiKey</span><span class="o">=</span>miVr6X7u6bN_sdahOBpjNejPgEsT35eXq-jB8CG20YI3yaxXcgpyuaIRmFI_EJTVwZ0nUkkJbPmY3y2bciKwFQ<span class="p">&amp;</span><span class="nv">signature</span><span class="o">=</span>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D
</pre></div>
</div>
</div>
<div class="section" id="limiting-the-rate-of-api-requests">
<h3>Limiting the Rate of API Requests</h3>
<p>You can limit the rate at which API requests can be placed for each
account. This is useful to avoid malicious attacks on the Management
Server, prevent performance degradation, and provide fairness to all
accounts.</p>
<p>If the number of API calls exceeds the threshold, an error message is
returned for any additional API calls. The caller will have to retry
these API calls at another time.</p>
</div>
<div class="section" id="configuring-the-api-request-rate">
<h3>Configuring the API Request Rate</h3>
<p>To control the API request rate, use the following global configuration
settings:</p>
<ul class="simple">
<li><p><cite>api.throttling.enabled</cite> - Enable/Disable API throttling. By default,
this setting is false, so API throttling is not enabled.</p></li>
<li><p><cite>api.throttling.interval</cite> (in seconds) - Time interval during which the
number of API requests is to be counted. When the interval has
passed, the API count is reset to 0.</p></li>
<li><p><cite>api.throttling.max</cite> - Maximum number of APIs that can be placed within
the <cite>api.throttling.interval</cite> period.</p></li>
<li><p><cite>api.throttling.cachesize</cite> - Cache size for storing API counters. Use a
value higher than the total number of accounts managed by the cloud.
One cache entry is needed for each account, to store the running API
total for that account.</p></li>
</ul>
</div>
<div class="section" id="limitations-on-api-throttling">
<h3>Limitations on API Throttling</h3>
<p>The following limitations exist in the current implementation of this
feature.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>Even with these limitations, CloudStack is still able to effectively use
API throttling to avoid malicious attacks causing denial of service.</p>
</div>
<ul class="simple">
<li><p>In a deployment with multiple Management Servers, the cache is not
synchronized across them. In this case, CloudStack might not be able
to ensure that only the exact desired number of API requests are
allowed. In the worst case, the number of API calls that might be
allowed is (number of Management Servers) * (api.throttling.max).</p></li>
<li><p>The API commands resetApiLimit and getApiLimit are limited to the
Management Server where the API is invoked.</p></li>
</ul>
</div>
<div class="section" id="api-responses">
<h3>API Responses</h3>
<div class="section" id="response-formats-xml-and-json">
<h4>Response Formats: XML and JSON</h4>
<p>CloudStack supports two formats as the response to an API call. The
default response is XML. If you would like the response to be in JSON,
add <cite>&amp;response=json</cite> to the Command String.</p>
<p>The two response formats differ in how they handle blank fields. In
JSON, if there is no value for a response field, it will not appear in
the response. If all the fields were empty, there might be no response
at all. In XML, even if there is no value to be returned, an empty field
will be returned as a placeholder XML element.</p>
<p>Sample XML Response:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&lt;listipaddressesresponse&gt;
   &lt;allocatedipaddress&gt;
   &lt;ipaddress&gt;192.168.10.141&lt;/ipaddress&gt;
   &lt;allocated&gt;2009-09-18T13:16:10-0700&lt;/allocated&gt;
   &lt;zoneid&gt;4&lt;/zoneid&gt;
      &lt;zonename&gt;WC&lt;/zonename&gt;
      &lt;issourcenat&gt;true&lt;/issourcenat&gt;
   &lt;/allocatedipaddress&gt;
&lt;/listipaddressesresponse&gt;
</pre></div>
</div>
<p>Sample JSON Response:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="o">{</span> <span class="s2">&quot;listipaddressesresponse&quot;</span> :
  <span class="o">{</span> <span class="s2">&quot;allocatedipaddress&quot;</span> :
    <span class="o">[</span>
      <span class="o">{</span>
        <span class="s2">&quot;ipaddress&quot;</span> : <span class="s2">&quot;192.168.10.141&quot;</span>,
        <span class="s2">&quot;allocated&quot;</span> : <span class="s2">&quot;2009-09-18T13:16:10-0700&quot;</span>,
        <span class="s2">&quot;zoneid&quot;</span> : <span class="s2">&quot;4&quot;</span>,
        <span class="s2">&quot;zonename&quot;</span> : <span class="s2">&quot;WC&quot;</span>,
        <span class="s2">&quot;issourcenat&quot;</span> : <span class="s2">&quot;true&quot;</span>
      <span class="o">}</span>
    <span class="o">]</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="maximum-result-pages-returned">
<h3>Maximum Result Pages Returned</h3>
<p>For each cloud, there is a default upper limit on the number of results
that any API command will return in a single page. This is to help
prevent overloading the cloud servers and prevent DOS attacks. For
example, if the page size limit is 500 and a command returns 10,000
results, the command will return 20 pages.</p>
<p>The default page size limit can be different for each cloud. It is set
in the global configuration parameter <cite>default.page.size</cite>. If your cloud
has many users with lots of VMs, you might need to increase the value of
this parameter. At the same time, be careful not to set it so high that
your site can be taken down by an enormous return from an API call. For
more information about how to set global configuration parameters, see
“Describe Your Deployment” in the Installation Guide.</p>
<p>To decrease the page size limit for an individual API command, override
the global setting with the page and pagesize parameters, which are
available in any list* command (listCapabilities, listDiskOfferings,
etc.).</p>
<ul class="simple">
<li><p>Both parameters must be specified together.</p></li>
<li><p>The value of the pagesize parameter must be smaller than the value of
default.page.size. That is, you can not increase the number of
possible items in a result page, only decrease it.</p></li>
</ul>
<p>For syntax information on the list* commands, see the API Reference.</p>
</div>
<div class="section" id="error-handling">
<h3>Error Handling</h3>
<p>If an error occurs while processing an API request, the appropriate
response in the format specified is returned. Each error response
consists of an error code and an error text describing what possibly can
go wrong. Below is a list of possible error codes:</p>
<p>You can now find the CloudStack-specific error code in the exception
response for each type of exception. The following list of error codes
is added to the new class named CSExceptionErrorCode.</p>
<p>4250 : “com.cloud.utils.exception.CloudRuntimeException”</p>
<p>4255 : “com.cloud.utils.exception.ExceptionUtil”</p>
<p>4260 : “com.cloud.utils.exception.ExecutionException”</p>
<p>4265 : “com.cloud.utils.exception.HypervisorVersionChangedException”</p>
<p>4270 : “com.cloud.utils.exception.RuntimeCloudException”</p>
<p>4275 : “com.cloud.exception.CloudException”</p>
<p>4280 : “com.cloud.exception.AccountLimitException”</p>
<p>4285 : “com.cloud.exception.AgentUnavailableException”</p>
<p>4290 : “com.cloud.exception.CloudAuthenticationException”</p>
<p>4295 : “com.cloud.exception.CloudExecutionException”</p>
<p>4300 : “com.cloud.exception.ConcurrentOperationException”</p>
<p>4305 : “com.cloud.exception.ConflictingNetworkSettingsException”</p>
<p>4310 : “com.cloud.exception.DiscoveredWithErrorException”</p>
<p>4315 : “com.cloud.exception.HAStateException”</p>
<p>4320 : “com.cloud.exception.InsufficientAddressCapacityException”</p>
<p>4325 : “com.cloud.exception.InsufficientCapacityException”</p>
<p>4330 : “com.cloud.exception.InsufficientNetworkCapacityException”</p>
<p>4335 : “com.cloud.exception.InsufficientServerCapacityException”</p>
<p>4340 : “com.cloud.exception.InsufficientStorageCapacityException”</p>
<p>4345 : “com.cloud.exception.InternalErrorException”</p>
<p>4350 : “com.cloud.exception.InvalidParameterValueException”</p>
<p>4355 : “com.cloud.exception.ManagementServerException”</p>
<p>4360 : “com.cloud.exception.NetworkRuleConflictException”</p>
<p>4365 : “com.cloud.exception.PermissionDeniedException”</p>
<p>4370 : “com.cloud.exception.ResourceAllocationException”</p>
<p>4375 : “com.cloud.exception.ResourceInUseException”</p>
<p>4380 : “com.cloud.exception.ResourceUnavailableException”</p>
<p>4385 : “com.cloud.exception.StorageUnavailableException”</p>
<p>4390 : “com.cloud.exception.UnsupportedServiceException”</p>
<p>4395 : “com.cloud.exception.VirtualMachineMigrationException”</p>
<p>4400 : “com.cloud.exception.AccountLimitException”</p>
<p>4405 : “com.cloud.exception.AgentUnavailableException”</p>
<p>4410 : “com.cloud.exception.CloudAuthenticationException”</p>
<p>4415 : “com.cloud.exception.CloudException”</p>
<p>4420 : “com.cloud.exception.CloudExecutionException”</p>
<p>4425 : “com.cloud.exception.ConcurrentOperationException”</p>
<p>4430 : “com.cloud.exception.ConflictingNetworkSettingsException”</p>
<p>4435 : “com.cloud.exception.ConnectionException”</p>
<p>4440 : “com.cloud.exception.DiscoveredWithErrorException”</p>
<p>4445 : “com.cloud.exception.DiscoveryException”</p>
<p>4450 : “com.cloud.exception.HAStateException”</p>
<p>4455 : “com.cloud.exception.InsufficientAddressCapacityException”</p>
<p>4460 : “com.cloud.exception.InsufficientCapacityException”</p>
<p>4465 : “com.cloud.exception.InsufficientNetworkCapacityException”</p>
<p>4470 : “com.cloud.exception.InsufficientServerCapacityException”</p>
<p>4475 : “com.cloud.exception.InsufficientStorageCapacityException”</p>
<p>4480 : “com.cloud.exception.InsufficientVirtualNetworkCapcityException”</p>
<p>4485 : “com.cloud.exception.InternalErrorException”</p>
<p>4490 : “com.cloud.exception.InvalidParameterValueException”</p>
<p>4495 : “com.cloud.exception.ManagementServerException”</p>
<p>4500 : “com.cloud.exception.NetworkRuleConflictException”</p>
<p>4505 : “com.cloud.exception.PermissionDeniedException”</p>
<p>4510 : “com.cloud.exception.ResourceAllocationException”</p>
<p>4515 : “com.cloud.exception.ResourceInUseException”</p>
<p>4520 : “com.cloud.exception.ResourceUnavailableException”</p>
<p>4525 : “com.cloud.exception.StorageUnavailableException”</p>
<p>4530 : “com.cloud.exception.UnsupportedServiceException”</p>
<p>4535 : “com.cloud.exception.VirtualMachineMigrationException”</p>
<p>9999 : “org.apache.cloudstack.api.ServerApiException”</p>
<p>An HTTP error code of 401 is always returned if API request was rejected
due to bad signatures, missing API Keys, or the user simply did not have
the permissions to execute the command.</p>
</div>
<div class="section" id="asynchronous-commands">
<h3>Asynchronous Commands</h3>
<p>Asynchronous commands were introduced in CloudStack 2.x. Commands are
designated as asynchronous when they can potentially take a long period
of time to complete such as creating a snapshot or disk volume. They
differ from synchronous commands by the following:</p>
<ul>
<li><p>They are identified in the API Reference by an (A).</p></li>
<li><p>They will immediately return a job ID to refer to the job that will
be responsible in processing the command.</p></li>
<li><p>If executed as a “create” resource command, it will return the
resource ID as well as the job ID.</p>
<p>You can periodically check the status of the job by making a simple
API call to the command, <cite>queryAsyncJobResult</cite> and passing in the job
ID.</p>
</li>
</ul>
</div>
<div class="section" id="job-status">
<h3>Job Status</h3>
<p>The key to using an asynchronous command is the job ID that is returned
immediately once the command has been executed. With the job ID, you can
periodically check the job status by making calls to queryAsyncJobResult
command. The command will return three possible job status integer
values:</p>
<ul class="simple">
<li><p>0 - Job is still in progress. Continue to periodically poll for any
status changes.</p></li>
<li><p>1 - Job has successfully completed. The job will return any
successful response values associated with command that was
originally executed.</p></li>
<li><p>2 - Job has failed to complete. Please check the “jobresultcode” tag
for failure reason code and “jobresult” for the failure reason.</p></li>
</ul>
</div>
<div class="section" id="example">
<h3>Example</h3>
<p>The following shows an example of using an asynchronous command. Assume
the API command:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">command</span><span class="o">=</span>deployVirtualMachine<span class="p">&amp;</span><span class="nv">zoneId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">serviceOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">diskOfferingId</span><span class="o">=</span><span class="m">1</span><span class="p">&amp;</span><span class="nv">templateId</span><span class="o">=</span><span class="m">1</span>
</pre></div>
</div>
<p>CloudStack will immediately return a job ID and any other additional
data.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&lt;deployvirtualmachineresponse&gt;
   &lt;jobid&gt;1&lt;/jobid&gt;
   &lt;id&gt;100&lt;/id&gt;
&lt;/deployvirtualmachineresponse&gt;
</pre></div>
</div>
<p>Using the job ID, you can periodically poll for the results by using the
queryAsyncJobResult command.</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span><span class="nv">command</span><span class="o">=</span>queryAsyncJobResult<span class="p">&amp;</span><span class="nv">jobId</span><span class="o">=</span><span class="m">1</span>
</pre></div>
</div>
<p>Three possible results could come from this query.</p>
<p>Job is still pending:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&lt;queryasyncjobresult&gt;
   &lt;jobid&gt;1&lt;/jobid&gt;
   &lt;jobstatus&gt;0&lt;/jobstatus&gt;
   &lt;jobprocstatus&gt;1&lt;/jobprocstatus&gt;
&lt;/queryasyncjobresult&gt;
</pre></div>
</div>
<p>Job has succeeded:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&lt;queryasyncjobresultresponse cloud-stack-version<span class="o">=</span><span class="s2">&quot;3.0.1.6&quot;</span>&gt;
   &lt;jobid&gt;1&lt;/jobid&gt;
   &lt;jobstatus&gt;1&lt;/jobstatus&gt;
   &lt;jobprocstatus&gt;0&lt;/jobprocstatus&gt;
   &lt;jobresultcode&gt;0&lt;/jobresultcode&gt;
   &lt;jobresulttype&gt;object&lt;/jobresulttype&gt;
   &lt;jobresult&gt;
      &lt;virtualmachine&gt;
         &lt;id&gt;450&lt;/id&gt;
         &lt;name&gt;i-2-450-VM&lt;/name&gt;
         &lt;displayname&gt;i-2-450-VM&lt;/displayname&gt;
         &lt;account&gt;admin&lt;/account&gt;
         &lt;domainid&gt;1&lt;/domainid&gt;
         &lt;domain&gt;ROOT&lt;/domain&gt;
         &lt;created&gt;2011-03-10T18:20:25-0800&lt;/created&gt;
         &lt;state&gt;Running&lt;/state&gt;
         &lt;haenable&gt;false&lt;/haenable&gt;
         &lt;zoneid&gt;1&lt;/zoneid&gt;
         &lt;zonename&gt;San Jose <span class="m">1</span>&lt;/zonename&gt;
         &lt;hostid&gt;2&lt;/hostid&gt;
         &lt;hostname&gt;905-13.sjc.lab.vmops.com&lt;/hostname&gt;
         &lt;templateid&gt;1&lt;/templateid&gt;
         &lt;templatename&gt;CentOS <span class="m">5</span>.3 64bit LAMP&lt;/templatename&gt;
         &lt;templatedisplaytext&gt;CentOS <span class="m">5</span>.3 64bit LAMP&lt;/templatedisplaytext&gt;
         &lt;passwordenabled&gt;false&lt;/passwordenabled&gt;
         &lt;serviceofferingid&gt;1&lt;/serviceofferingid&gt;
         &lt;serviceofferingname&gt;Small Instance&lt;/serviceofferingname&gt;
         &lt;cpunumber&gt;1&lt;/cpunumber&gt;
         &lt;cpuspeed&gt;500&lt;/cpuspeed&gt;
         &lt;memory&gt;512&lt;/memory&gt;
         &lt;guestosid&gt;12&lt;/guestosid&gt;
         &lt;rootdeviceid&gt;0&lt;/rootdeviceid&gt;
         &lt;rootdevicetype&gt;NetworkFilesystem&lt;/rootdevicetype&gt;
         &lt;nic&gt;
            &lt;id&gt;561&lt;/id&gt;
            &lt;networkid&gt;205&lt;/networkid&gt;
            &lt;netmask&gt;255.255.255.0&lt;/netmask&gt;
            &lt;gateway&gt;10.1.1.1&lt;/gateway&gt;
            &lt;ipaddress&gt;10.1.1.225&lt;/ipaddress&gt;
            &lt;isolationuri&gt;vlan://295&lt;/isolationuri&gt;
            &lt;broadcasturi&gt;vlan://295&lt;/broadcasturi&gt;
            &lt;traffictype&gt;Guest&lt;/traffictype&gt;
            &lt;type&gt;Virtual&lt;/type&gt;
            &lt;isdefault&gt;true&lt;/isdefault&gt;
         &lt;/nic&gt;
         &lt;hypervisor&gt;XenServer&lt;/hypervisor&gt;
      &lt;/virtualmachine&gt;
   &lt;/jobresult&gt;
&lt;/queryasyncjobresultresponse&gt;
</pre></div>
</div>
<p>Job has failed:</p>
<div class="highlight-bash"><div class="highlight"><pre><span></span>&lt;queryasyncjobresult&gt;
   &lt;jobid&gt;1&lt;/jobid&gt;
   &lt;jobstatus&gt;2&lt;/jobstatus&gt;
   &lt;jobprocstatus&gt;0&lt;/jobprocstatus&gt;
   &lt;jobresultcode&gt;551&lt;/jobresultcode&gt;
   &lt;jobresulttype&gt;text&lt;/jobresulttype&gt;
   &lt;jobresult&gt;Unable to deploy virtual machine <span class="nv">id</span> <span class="o">=</span> <span class="m">100</span> due to not enough capacity&lt;/jobresult&gt;
&lt;/queryasyncjobresult&gt;
</pre></div>
</div>
</div>
</div>
<div class="section" id="event-types">
<h2>Event Types</h2>
<table class="table-striped table-bordered table-hover docutils">
<colgroup>
<col style="width: 25%" />
<col style="width: 75%" />
</colgroup>
<thead>
<tr class="row-odd"><th class="head"><p>Types</p></th>
<th class="head"><p>Events</p></th>
</tr>
</thead>
<tbody>
<tr class="row-even"><td><p>VM</p></td>
<td><p>VM.CREATE</p>
<p>VM.DESTROY</p>
<p>VM.START</p>
<p>VM.STOP</p>
<p>VM.REBOOT</p>
<p>VM.UPDATE</p>
<p>VM.UPGRADE</p>
<p>VM.DYNAMIC.SCALE</p>
<p>VM.RESETPASSWORD</p>
<p>VM.RESETSSHKEY</p>
<p>VM.MIGRATE</p>
<p>VM.MOVE</p>
<p>VM.RESTORE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Domain Router</p></td>
<td><p>ROUTER.CREATE</p>
<p>ROUTER.DESTROY</p>
<p>ROUTER.START</p>
<p>ROUTER.STOP</p>
<p>ROUTER.REBOOT</p>
<p>ROUTER.HA</p>
<p>ROUTER.UPGRADE</p>
</td>
</tr>
<tr class="row-even"><td><p>Console proxy</p></td>
<td><p>PROXY.CREATE</p>
<p>PROXY.DESTROY</p>
<p>PROXY.START</p>
<p>PROXY.STOP</p>
<p>PROXY.REBOOT</p>
<p>PROXY.HA</p>
</td>
</tr>
<tr class="row-odd"><td><p>VNC Console
Events</p></td>
<td><p>VNC.CONNECT</p>
<p>VNC.DISCONNECT</p>
</td>
</tr>
<tr class="row-even"><td><p>Network Events</p></td>
<td><p>NET.IPASSIGN</p>
<p>NET.IPRELEASE</p>
<p>PORTABLE.IPASSIGN</p>
<p>PORTABLE.IPRELEASE</p>
<p>NET.RULEADD</p>
<p>NET.RULEDELETE</p>
<p>NET.RULEMODIFY</p>
<p>NETWORK.CREATE</p>
<p>NETWORK.DELETE</p>
<p>NETWORK.UPDATE</p>
<p>FIREWALL.OPEN</p>
<p>FIREWALL.CLOSE</p>
</td>
</tr>
<tr class="row-odd"><td><p>NIC Events</p></td>
<td><p>NIC.CREATE</p>
<p>NIC.DELETE</p>
<p>NIC.UPDATE</p>
<p>NIC.DETAIL.ADD</p>
<p>NIC.DETAIL.UPDATE</p>
<p>NIC.DETAIL.REMOVE</p>
</td>
</tr>
<tr class="row-even"><td><p>Load Balancers</p></td>
<td><p>LB.ASSIGN.TO.RULE</p>
<p>LB.REMOVE.FROM.RULE</p>
<p>LB.CREATE</p>
<p>LB.DELETE</p>
<p>LB.STICKINESSPOLICY.CREATE</p>
<p>LB.STICKINESSPOLICY.DELETE</p>
<p>LB.HEALTHCHECKPOLICY.CREATE</p>
<p>LB.HEALTHCHECKPOLICY.DELETE</p>
<p>LB.UPDATE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Global Load
Balancer rules</p></td>
<td><p>GLOBAL.LB.ASSIGN</p>
<p>GLOBAL.LB.REMOVE</p>
<p>GLOBAL.LB.CREATE</p>
<p>GLOBAL.LB.DELETE</p>
<p>GLOBAL.LB.UPDATE</p>
</td>
</tr>
<tr class="row-even"><td><p>Account events</p></td>
<td><p>ACCOUNT.ENABLE</p>
<p>ACCOUNT.DISABLE</p>
<p>ACCOUNT.CREATE</p>
<p>ACCOUNT.DELETE</p>
<p>ACCOUNT.UPDATE</p>
<p>ACCOUNT.MARK.DEFAULT.ZONE</p>
</td>
</tr>
<tr class="row-odd"><td><p>UserVO Events</p></td>
<td><p>USER.LOGIN</p>
<p>USER.LOGOUT</p>
<p>USER.CREATE</p>
<p>USER.DELETE</p>
<p>USER.DISABLE</p>
<p>USER.UPDATE</p>
<p>USER.ENABLE</p>
<p>USER.LOCK</p>
</td>
</tr>
<tr class="row-even"><td><p>Registering SSH
keypair events</p></td>
<td><p>REGISTER.SSH.KEYPAIR</p></td>
</tr>
<tr class="row-odd"><td><p>Register for user
API and secret
keys</p></td>
<td><p>REGISTER.USER.KEY</p></td>
</tr>
<tr class="row-even"><td><p>Template Events</p></td>
<td><p>TEMPLATE.CREATE</p>
<p>TEMPLATE.DELETE</p>
<p>TEMPLATE.UPDATE</p>
<p>TEMPLATE.DOWNLOAD.START</p>
<p>TEMPLATE.DOWNLOAD.SUCCESS</p>
<p>TEMPLATE.DOWNLOAD.FAILED</p>
<p>TEMPLATE.COPY</p>
<p>TEMPLATE.EXTRACT</p>
<p>TEMPLATE.UPLOAD</p>
<p>TEMPLATE.CLEANUP</p>
</td>
</tr>
<tr class="row-odd"><td><p>Volume Events</p></td>
<td><p>VOLUME.CREATE</p>
<p>VOLUME.DELETE</p>
<p>VOLUME.ATTACH</p>
<p>VOLUME.DETACH</p>
<p>VOLUME.EXTRACT</p>
<p>VOLUME.UPLOAD</p>
<p>VOLUME.MIGRATE</p>
<p>VOLUME.RESIZE</p>
<p>VOLUME.DETAIL.UPDATE</p>
<p>VOLUME.DETAIL.ADD</p>
<p>VOLUME.DETAIL.REMOVE</p>
</td>
</tr>
<tr class="row-even"><td><p>Domains</p></td>
<td><p>DOMAIN.CREATE</p>
<p>DOMAIN.DELETE</p>
<p>DOMAIN.UPDATE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Snapshots</p></td>
<td><p>SNAPSHOT.CREATE</p>
<p>SNAPSHOT.DELETE</p>
<p>SNAPSHOTPOLICY.CREATE</p>
<p>SNAPSHOTPOLICY.UPDATE</p>
<p>SNAPSHOTPOLICY.DELETE</p>
</td>
</tr>
<tr class="row-even"><td><p>ISO</p></td>
<td><p>ISO.CREATE</p>
<p>ISO.DELETE</p>
<p>ISO.COPY</p>
<p>ISO.ATTACH</p>
<p>ISO.DETACH</p>
<p>ISO.EXTRACT</p>
<p>ISO.UPLOAD</p>
</td>
</tr>
<tr class="row-odd"><td><p>SSVM</p></td>
<td><p>SSVM.CREATE</p>
<p>SSVM.DESTROY</p>
<p>SSVM.START</p>
<p>SSVM.STOP</p>
<p>SSVM.REBOOT</p>
<p>SSVM.HA</p>
</td>
</tr>
<tr class="row-even"><td><p>Service Offerings</p></td>
<td><p>SERVICE.OFFERING.CREATE</p>
<p>SERVICE.OFFERING.EDIT</p>
<p>SERVICE.OFFERING.DELETE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Disk Offerings</p></td>
<td><p>DISK.OFFERING.CREATE</p>
<p>DISK.OFFERING.EDIT</p>
<p>DISK.OFFERING.DELETE</p>
</td>
</tr>
<tr class="row-even"><td><p>Network offerings</p></td>
<td><p>NETWORK.OFFERING.CREATE</p>
<p>NETWORK.OFFERING.ASSIGN</p>
<p>NETWORK.OFFERING.EDIT</p>
<p>NETWORK.OFFERING.REMOVE</p>
<p>NETWORK.OFFERING.DELETE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Pods</p></td>
<td><p>POD.CREATE</p>
<p>POD.EDIT</p>
<p>POD.DELETE</p>
</td>
</tr>
<tr class="row-even"><td><p>Zones</p></td>
<td><p>ZONE.CREATE</p>
<p>ZONE.EDIT</p>
<p>ZONE.DELETE</p>
</td>
</tr>
<tr class="row-odd"><td><p>VLANs/IP ranges</p></td>
<td><p>VLAN.IP.RANGE.CREATE</p>
<p>VLAN.IP.RANGE.DELETE</p>
<p>VLAN.IP.RANGE.DEDICATE</p>
<p>VLAN.IP.RANGE.RELEASE</p>
<p>STORAGE.IP.RANGE.CREATE</p>
<p>STORAGE.IP.RANGE.DELETE</p>
<p>STORAGE.IP.RANGE.UPDATE</p>
</td>
</tr>
<tr class="row-even"><td><p>Configuration
Table</p></td>
<td><p>CONFIGURATION.VALUE.EDIT</p></td>
</tr>
<tr class="row-odd"><td><p>Security Groups</p></td>
<td><p>SG.AUTH.INGRESS</p>
<p>SG.REVOKE.INGRESS</p>
<p>SG.AUTH.EGRESS</p>
<p>SG.REVOKE.EGRESS</p>
<p>SG.CREATE</p>
<p>SG.DELETE</p>
<p>SG.ASSIGN</p>
<p>SG.REMOVE</p>
</td>
</tr>
<tr class="row-even"><td><p>Host</p></td>
<td><p>HOST.RECONNECT</p></td>
</tr>
<tr class="row-odd"><td><p>Maintenance</p></td>
<td><p>MAINT.CANCEL</p>
<p>MAINT.CANCEL.PS</p>
<p>MAINT.PREPARE</p>
<p>MAINT.PREPARE.PS</p>
</td>
</tr>
<tr class="row-even"><td><p>VPN</p></td>
<td><p>VPN.REMOTE.ACCESS.CREATE</p>
<p>VPN.REMOTE.ACCESS.DESTROY</p>
<p>VPN.USER.ADD</p>
<p>VPN.USER.REMOVE</p>
<p>VPN.S2S.VPN.GATEWAY.CREATE</p>
<p>VPN.S2S.VPN.GATEWAY.DELETE</p>
<p>VPN.S2S.CUSTOMER.GATEWAY.CREATE</p>
<p>VPN.S2S.CUSTOMER.GATEWAY.DELETE</p>
<p>VPN.S2S.CUSTOMER.GATEWAY.UPDATE</p>
<p>VPN.S2S.CONNECTION.CREATE</p>
<p>VPN.S2S.CONNECTION.DELETE</p>
<p>VPN.S2S.CONNECTION.RESET</p>
</td>
</tr>
<tr class="row-odd"><td><p>Network</p></td>
<td><p>NETWORK.RESTART</p></td>
</tr>
<tr class="row-even"><td><p>Custom
certificates</p></td>
<td><p>UPLOAD.CUSTOM.CERTIFICATE</p></td>
</tr>
<tr class="row-odd"><td><p>OneToOnenat</p></td>
<td><p>STATICNAT.ENABLE</p>
<p>STATICNAT.DISABLE</p>
<p>ZONE.VLAN.ASSIGN</p>
<p>ZONE.VLAN.RELEASE</p>
</td>
</tr>
<tr class="row-even"><td><p>Projects</p></td>
<td><p>PROJECT.CREATE</p>
<p>PROJECT.UPDATE</p>
<p>PROJECT.DELETE</p>
<p>PROJECT.ACTIVATE</p>
<p>PROJECT.SUSPEND</p>
<p>PROJECT.ACCOUNT.ADD</p>
<p>PROJECT.INVITATION.UPDATE</p>
<p>PROJECT.INVITATION.REMOVE</p>
<p>PROJECT.ACCOUNT.REMOVE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Network as a
Service</p></td>
<td><p>NETWORK.ELEMENT.CONFIGURE</p></td>
</tr>
<tr class="row-even"><td><p>Physical Network
Events</p></td>
<td><p>PHYSICAL.NETWORK.CREATE</p>
<p>PHYSICAL.NETWORK.DELETE</p>
<p>PHYSICAL.NETWORK.UPDATE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Physical Network
Service Provider
Events</p></td>
<td><p>SERVICE.PROVIDER.CREATE</p>
<p>SERVICE.PROVIDER.DELETE</p>
<p>SERVICE.PROVIDER.UPDATE</p>
</td>
</tr>
<tr class="row-even"><td><p>Physical Network
Traffic Type
Events</p></td>
<td><p>TRAFFIC.TYPE.CREATE</p>
<p>TRAFFIC.TYPE.DELETE</p>
<p>TRAFFIC.TYPE.UPDATE</p>
</td>
</tr>
<tr class="row-odd"><td><p>External network
device events</p></td>
<td><p>PHYSICAL.LOADBALANCER.ADD</p>
<p>PHYSICAL.LOADBALANCER.DELETE</p>
<p>PHYSICAL.LOADBALANCER.CONFIGURE</p>
</td>
</tr>
<tr class="row-even"><td><p>External switch
management device
events</p>
<p>For example:
Cisco Nexus 1000v
Virtual
Supervisor
Module.</p>
</td>
<td><p>SWITCH.MGMT.ADD</p>
<p>SWITCH.MGMT.DELETE</p>
<p>SWITCH.MGMT.CONFIGURE</p>
<p>SWITCH.MGMT.ENABLE</p>
<p>SWITCH.MGMT.DISABLE</p>
<p>PHYSICAL.FIREWALL.ADD</p>
<p>PHYSICAL.FIREWALL.DELETE</p>
<p>PHYSICAL.FIREWALL.CONFIGURE</p>
</td>
</tr>
<tr class="row-odd"><td><p>VPC</p></td>
<td><p>VPC.CREATE</p>
<p>VPC.UPDATE</p>
<p>VPC.DELETE</p>
<p>VPC.RESTART</p>
</td>
</tr>
<tr class="row-even"><td><p>Network ACL</p></td>
<td><p>NETWORK.ACL.CREATE</p>
<p>NETWORK.ACL.DELETE</p>
<p>NETWORK.ACL.REPLACE</p>
<p>NETWORK.ACL.ITEM.CREATE</p>
<p>NETWORK.ACL.ITEM.UPDATE</p>
<p>NETWORK.ACL.ITEM.DELETE</p>
</td>
</tr>
<tr class="row-odd"><td><p>VPC offerings</p></td>
<td><p>VPC.OFFERING.CREATE</p>
<p>VPC.OFFERING.UPDATE</p>
<p>VPC.OFFERING.DELETE</p>
</td>
</tr>
<tr class="row-even"><td><p>Private gateway</p></td>
<td><p>PRIVATE.GATEWAY.CREATE</p>
<p>PRIVATE.GATEWAY.DELETE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Static routes</p></td>
<td><p>STATIC.ROUTE.CREATE</p>
<p>STATIC.ROUTE.DELETE</p>
</td>
</tr>
<tr class="row-even"><td><p>Tag-related
events</p></td>
<td><p>CREATE_TAGS</p>
<p>DELETE_TAGS</p>
</td>
</tr>
<tr class="row-odd"><td><p>Meta data-related
events</p></td>
<td><p>CREATE_RESOURCE_DETAILS</p>
<p>DELETE_RESOURCE_DETAILS</p>
</td>
</tr>
<tr class="row-even"><td><p>VM snapshot
events</p></td>
<td><p>VMSNAPSHOT.CREATE</p>
<p>VMSNAPSHOT.DELETE</p>
<p>VMSNAPSHOT.REVERTTO</p>
</td>
</tr>
<tr class="row-odd"><td><p>External network
device events</p></td>
<td><p>PHYSICAL.NVPCONTROLLER.ADD</p>
<p>PHYSICAL.NVPCONTROLLER.DELETE</p>
<p>PHYSICAL.NVPCONTROLLER.CONFIGURE</p>
</td>
</tr>
<tr class="row-even"><td><p>AutoScale</p></td>
<td><p>COUNTER.CREATE</p>
<p>COUNTER.DELETE</p>
<p>CONDITION.CREATE</p>
<p>CONDITION.DELETE</p>
<p>AUTOSCALEPOLICY.CREATE</p>
<p>AUTOSCALEPOLICY.UPDATE</p>
<p>AUTOSCALEPOLICY.DELETE</p>
<p>AUTOSCALEVMPROFILE.CREATE</p>
<p>AUTOSCALEVMPROFILE.DELETE</p>
<p>AUTOSCALEVMPROFILE.UPDATE</p>
<p>AUTOSCALEVMGROUP.CREATE</p>
<p>AUTOSCALEVMGROUP.DELETE</p>
<p>AUTOSCALEVMGROUP.UPDATE</p>
<p>AUTOSCALEVMGROUP.ENABLE</p>
<p>AUTOSCALEVMGROUP.DISABLE</p>
<p>PHYSICAL.DHCP.ADD</p>
<p>PHYSICAL.DHCP.DELETE</p>
<p>PHYSICAL.PXE.ADD</p>
<p>PHYSICAL.PXE.DELETE</p>
<p>AG.CREATE</p>
<p>AG.DELETE</p>
<p>AG.ASSIGN</p>
<p>AG.REMOVE</p>
<p>VM.AG.UPDATE</p>
<p>INTERNALLBVM.START</p>
<p>INTERNALLBVM.STOP</p>
<p>HOST.RESERVATION.RELEASE</p>
</td>
</tr>
<tr class="row-odd"><td><p>Dedicated guest
vlan range</p></td>
<td><p>GUESTVLANRANGE.DEDICATE</p>
<p>GUESTVLANRANGE.RELEASE</p>
<p>PORTABLE.IP.RANGE.CREATE</p>
<p>PORTABLE.IP.RANGE.DELETE</p>
<p>PORTABLE.IP.TRANSFER</p>
</td>
</tr>
<tr class="row-even"><td><p>Dedicated
Resources</p></td>
<td><p>DEDICATE.RESOURCE</p>
<p>DEDICATE.RESOURCE.RELEASE</p>
<p>VM.RESERVATION.CLEANUP</p>
<p>UCS.ASSOCIATEPROFILE</p>
<p>UCS.DISASSOCIATEPROFILE</p>
</td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="time-zones">
<h2>Time Zones</h2>
<p>The following time zone identifiers are accepted by PRODUCT. There are
several places that have a time zone as a required or optional
parameter. These include scheduling recurring snapshots, creating a
user, and specifying the usage time zone in the Configuration table.</p>
<table class="table-striped table-bordered table-hover docutils">
<colgroup>
<col style="width: 43%" />
<col style="width: 28%" />
<col style="width: 29%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p>Etc/GMT+12</p></td>
<td><p>Etc/GMT+11</p></td>
<td><p>Pacific/Samoa</p></td>
</tr>
<tr class="row-even"><td><p>Pacific/Honolulu</p></td>
<td><p>US/Alaska</p></td>
<td><p>America/Los_Angeles</p></td>
</tr>
<tr class="row-odd"><td><p>Mexico/BajaNorte</p></td>
<td><p>US/Arizona</p></td>
<td><p>US/Mountain</p></td>
</tr>
<tr class="row-even"><td><p>America/Chihuahua</p></td>
<td><p>America/Chicago</p></td>
<td><p>America/Costa_Rica</p></td>
</tr>
<tr class="row-odd"><td><p>America/Mexico_City</p></td>
<td><p>Canada/Saskatchewan</p></td>
<td><p>America/Bogota</p></td>
</tr>
<tr class="row-even"><td><p>America/New_York</p></td>
<td><p>America/Caracas</p></td>
<td><p>America/Asuncion</p></td>
</tr>
<tr class="row-odd"><td><p>America/Cuiaba</p></td>
<td><p>America/Halifax</p></td>
<td><p>America/La_Paz</p></td>
</tr>
<tr class="row-even"><td><p>America/Santiago</p></td>
<td><p>America/St_Johns</p></td>
<td><p>America/Araguaina</p></td>
</tr>
<tr class="row-odd"><td><p>America/Argentina/Buenos_Aires</p></td>
<td><p>America/Cayenne</p></td>
<td><p>America/Godthab</p></td>
</tr>
<tr class="row-even"><td><p>America/Montevideo</p></td>
<td><p>Etc/GMT+2</p></td>
<td><p>Atlantic/Azores</p></td>
</tr>
<tr class="row-odd"><td><p>Atlantic/Cape_Verde</p></td>
<td><p>Africa/Casablanca</p></td>
<td><p>Etc/UTC</p></td>
</tr>
<tr class="row-even"><td><p>Atlantic/Reykjavik</p></td>
<td><p>Europe/London</p></td>
<td><p>CET</p></td>
</tr>
<tr class="row-odd"><td><p>Europe/Bucharest</p></td>
<td><p>Africa/Johannesburg</p></td>
<td><p>Asia/Beirut</p></td>
</tr>
<tr class="row-even"><td><p>Africa/Cairo</p></td>
<td><p>Asia/Jerusalem</p></td>
<td><p>Europe/Minsk</p></td>
</tr>
<tr class="row-odd"><td><p>Europe/Moscow</p></td>
<td><p>Africa/Nairobi</p></td>
<td><p>Asia/Karachi</p></td>
</tr>
<tr class="row-even"><td><p>Asia/Kolkata</p></td>
<td><p>Asia/Bangkok</p></td>
<td><p>Asia/Shanghai</p></td>
</tr>
<tr class="row-odd"><td><p>Asia/Kuala_Lumpur</p></td>
<td><p>Australia/Perth</p></td>
<td><p>Asia/Taipei</p></td>
</tr>
<tr class="row-even"><td><p>Asia/Tokyo</p></td>
<td><p>Asia/Seoul</p></td>
<td><p>Australia/Adelaide</p></td>
</tr>
<tr class="row-odd"><td><p>Australia/Darwin</p></td>
<td><p>Australia/Brisbane</p></td>
<td><p>Australia/Canberra</p></td>
</tr>
<tr class="row-even"><td><p>Pacific/Guam</p></td>
<td><p>Pacific/Auckland</p></td>
<td></td>
</tr>
</tbody>
</table>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>